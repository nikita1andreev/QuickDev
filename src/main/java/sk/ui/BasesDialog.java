/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.ui;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import org.hibernate.Session;
//import org.hibernate.SessionFactory;


/**
 *
 * @author nnn
 */
public class BasesDialog extends javax.swing.JDialog {

    JFrame main;

    /**
     * Creates new form NewJDialog
     */
    public BasesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lastBases = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dolg = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        zvan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        login = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Сохранить");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Отмена");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("ФИО:");

        name.setText("jTextField2");

        jLabel1.setText("Строка подключения:");

        lastBases.setText("jTextField1");

        jLabel3.setText("Должность:");

        dolg.setText("jTextField2");

        jLabel4.setText("Звание:");

        zvan.setText("jTextField2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zvan)
                            .addComponent(dolg)
                            .addComponent(name)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(lastBases)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dolg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(zvan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lastBases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Идентификатор", "Сотрудник", "Стока подключения к базе"
            }
        ));
        Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Table.setEditingRow(1);
        jScrollPane1.setViewportView(Table);

        jButton3.setText("Выбрать базу");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("System login:");

        login.setText("jTextField2");

        jLabel6.setText("password:");

        password.setText("jTextField2");

        jButton4.setText("Добавить базу");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Удалить базу");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Main fr = (Main) this.getOwner();
        name.setText((String) fr.props.get("name"));
        lastBases.setText((String) fr.props.get("lastBase"));
        dolg.setText((String) fr.props.get("dolg"));
        zvan.setText((String) fr.props.get("zvan"));
        login.setText((String) fr.props.get("login"));
        password.setText((String) fr.props.get("password"));

        ArrayList<HashMap> a = (ArrayList) Main.convertFromXML((String) fr.props.get("bases"));

        Vector tableData = new Vector();
        Vector<String> tableHeaders = new Vector<String>();
        tableHeaders.add("Код");
        tableHeaders.add("Сотрудник");
        tableHeaders.add("Путь");
        int i = 0;
        for (Iterator it = a.iterator(); it.hasNext();) {
            HashMap o = (HashMap) it.next();
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(o.get("id"));
            oneRow.add(o.get("name"));
            oneRow.add(o.get("base"));
            tableData.add(oneRow);
            //i++;
        }
        Table.setModel(new DefaultTableModel(tableData, tableHeaders));


    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            save_table();
            Main fr = (Main) this.getOwner();
            
            fr.props.setProperty("name", name.getText());
            fr.props.setProperty("lastBase", lastBases.getText());
            fr.props.setProperty("dolg", dolg.getText());
            fr.props.setProperty("zvan", zvan.getText());
            fr.props.setProperty("login", login.getText());
            fr.props.setProperty("password", password.getText());
            fr.save_properties();
        } catch (IOException ex) {
            Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void save_table() {
        Main fr = (Main) this.getOwner();
                    TableModel tm = Table.getModel();
            ArrayList<HashMap> a = new ArrayList<>();
            for (int i = 0; i < tm.getRowCount(); i++) {
                HashMap hm = new HashMap();
                hm.put("id", tm.getValueAt(i, 0));
                hm.put("name", tm.getValueAt(i, 1));
                hm.put("base", tm.getValueAt(i, 2));
                a.add(hm);
            }
            fr.props.setProperty("bases", Main.convertToXML(a));            
            try {
            fr.save_properties();
                    } catch (IOException ex) {
            Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        }

    }
            
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Main fr = (Main) this.getOwner();
        String sBase = (String) Table.getModel().getValueAt(Table.convertRowIndexToModel(Table.getSelectedRow()), 2);
        fr.props.setProperty("lastBase", sBase);
        try {
            fr.save_properties();
        } catch (IOException ex) {
            Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        }
        fr.reload_data();
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Main fr = (Main) this.getOwner();
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "sql dumps", "sql");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            try {
                String path = chooser.getSelectedFile().getAbsolutePath();
                //FileReader filer = new FileReader(path);
                BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(path),"UTF-8"));
                Object s[] = br.lines().toArray();
                br.close();
//Process exec = Runtime.getRuntime().exec(new String[]{"cmd.exe","/c","C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin\\mysqldump "+fisier.getName()+" > C:\\"+fisier.getName()+".sql;"});
                String filename = chooser.getSelectedFile().getName().replaceAll(".sql", "");
                try {
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/?user=" + fr.getLogin() + "&password=" + fr.getPassword() + "&zeroDateTimeBehavior=convertToNull");
                    java.sql.Statement st = con.createStatement();
                    st.executeUpdate("CREATE DATABASE a" + ((String) s[s.length - 2]).replaceAll("-- ", ""));
                    st.close();
                } catch (SQLException ex) {
                    System.out.println("Can't create database");
                    Main.generateAndSendEmail(ex);
                    //Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
                }finally {
                    //st.close();
                };
                Process exec = Runtime.getRuntime().exec(
                        new String[]{"mysql", "a" + ((String) s[s.length - 2]).replaceAll("-- ", ""), "-u" + fr.getLogin(), fr.getPassword().equals("")?"":"-p" + fr.getPassword(), "-e", " source " + path}
                );
                //Wait for the command to complete, and check if the exit value was 0 (success)
                if (exec.waitFor() == 0) {
                    //normally terminated, a way to read the output
                    InputStream inputStream = exec.getInputStream();
                    byte[] buffer = new byte[inputStream.available()];
                    inputStream.read(buffer);

                    String str = new String(buffer);
                    System.out.println(str);
                    Vector v = new Vector();
                    v.add(((String) s[s.length - 2]).replaceAll("-- ", ""));
                    v.add(((String) s[s.length - 1]).replaceAll("-- ", ""));
                    v.add("jdbc:mysql://localhost:3306/a" + ((String) s[s.length - 2]).replaceAll("-- ", "") + "?zeroDateTimeBehavior=convertToNull");
                    ((DefaultTableModel) Table.getModel()).addRow(v);

                } else {
                    // abnormally terminated, there was some problem
                    //a way to read the error during the execution of the command
                    InputStream errorStream = exec.getErrorStream();
                    byte[] buffer = new byte[errorStream.available()];
                    errorStream.read(buffer);

                    String str = new String(buffer);
                    System.out.println(str);

                }

            } catch (IOException ex) {
                Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
                Main.generateAndSendEmail(ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(BasesDialog.class.getName()).log(Level.SEVERE, null, ex);
                Main.generateAndSendEmail(ex);
            }
        }
        save_table();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int i = Table.convertRowIndexToModel(Table.getSelectedRow());
        if (i!=-1){((DefaultTableModel)Table.getModel()).removeRow(i);
        save_table();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasesDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasesDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasesDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasesDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            Main.generateAndSendEmail(ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BasesDialog dialog = new BasesDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTextField dolg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastBases;
    private javax.swing.JTextField login;
    private javax.swing.JTextField name;
    private javax.swing.JTextField password;
    private javax.swing.JTextField zvan;
    // End of variables declaration//GEN-END:variables
}
